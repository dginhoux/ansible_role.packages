---
# - name: install/remove with dnf
#   ansible.builtin.dnf:
#     name: "{{ item.dnf | default(item.name) }}"
#     state: "{{ item.state | default(package_state) }}"
#     update_cache: "{{ packages_update_cache }}"
#   when: ( item.dnf_ignore | default('no') ) | string in 'False,false,No,no'
#   with_items: "{{ packages_list }}"


- name: Dnf Init removal packages list
  ansible.builtin.set_fact:
    list_remove: []

- name: Dnf populate removal packages list
  when:
    # - ( item.dnf_ignore | default('no') ) | string in 'False,false,No,no'
    - not ( item.dnf_ignore | default(false) )
    - item.state | default(package_state) == "absent"
  loop: "{{ packages_list + packages_list_host + packages_list_group | flatten(levels=1) }}"
  ansible.builtin.set_fact:
    list_remove: "{{ list_remove + [item.dnf | default(item.name)] }}"

- name: Dnf remove packages
  become: true
  when:
    - list_remove is defined
    - list_remove | length > 0
  ansible.builtin.dnf5:
    name: "{{ list_remove }}"
    state: "absent"


- name: Dnf init install packages list
  ansible.builtin.set_fact:
    list_add: []

- name: Dnf populate install packages list
  when:
    # - ( item.dnf_ignore | default('no') ) | string in 'False,false,No,no'
    - not ( item.dnf_ignore | default(false) )
    - item.state | default(package_state) == "present"
  loop: "{{ packages_list + packages_list_host + packages_list_group | flatten(levels=1) }}"
  ansible.builtin.set_fact:
    list_add: "{{ list_add + [item.dnf | default(item.name)] }}"

- name: Dnf install packages
  become: true
  when:
    - list_add is defined
    - list_add | length > 0
  ansible.builtin.dnf5:
    name: "{{ list_add }}"
    state: "present"
    update_cache: "{{ packages_update_cache }}"
